<header class="header">
  <h1 class="header__title">Registro</h1>
</header>
<div class="content">
  <div class="content__inner">
    <div class="container">
      <h2 class="content__title content__title--m-sm">Escoge tu tipo de usuario</h2>
      <form class="pick-animation my-4">
        <div class="form-row">
          <div class="col-5 m-auto">
            <select class="pick-animation__select form-control">
              <option value="member" selected="selected">Integrante</option>
              <option value="admin">Administrativo</option>
            </select>
          </div>
        </div>
      </form>  
    </div>
    <div class="container overflow-hidden">
      <div class="multisteps-form">
        <div class="row">
          <div class="col-12 col-lg-8 ml-auto mr-auto mb-4">
            <div class="multisteps-form__progress">
              <button class="multisteps-form__progress-btn js-active" type="button" title="User Info">Información</button>
              <button class="multisteps-form__progress-btn" type="button" title="Address">Framework</button>
            </div>
          </div>
        </div>
        <div class="row">
          <div class="col-12 col-lg-8 m-auto">
            <%= form_for(resource, as: resource_name, url: registration_path(resource_name), data: {turbo: false}) do |f| %>
              <% resource.errors.full_messages.each do |msg| %>
                  <%= msg %>
              <% end %>
              <div class="multisteps-form__panel shadow p-4 rounded bg-white js-active" data-animation="scaleIn">
                <h3 class="multisteps-form__title">Completa los siguientes campos</h3>
                  <div class="multisteps-form__content">
                    <%= render "devise/shared/error_messages", resource: resource %>
                    <div class="form-row mt-4">
                      <div class="col-12 col-sm-6">
                        <%= f.text_field :name, class: 'multisteps-form__input form-control', placeholder: 'Nombre',autofocus: true, autocomplete: "name" %>
                      </div>
                      <div class="col-12 col-sm-6 mt-4 mt-sm-0">
                        <%= f.text_field :last_name, class: 'multisteps-form__input form-control', placeholder: 'Apellido',autofocus: true, autocomplete: "last name" %>
                      </div>
                    </div>
                    <div class="form-row mt-4">
                      <div class="col-12 col-sm-6">
                        <%= f.number_field :id_number,class: 'multisteps-form__input form-control', placeholder: 'Cédula' ,autofocus: true, autocomplete: "id number" %>
                      </div>
                      <div class="col-12 col-sm-6 mt-4 mt-sm-0">
                        <%= f.email_field :email, class: 'multisteps-form__input form-control', placeholder: 'Email',autofocus: true, autocomplete: "email" %>
                      </div>
                    </div>
                    <div class="form-row mt-4">
                      <div class="col-12 col-sm-6">
                        <%= f.password_field :password, class: 'multisteps-form__input form-control', placeholder: "Contraseña",autocomplete: "new-password" %>
                      </div>
                      <div class="col-12 col-sm-6 mt-4 mt-sm-0">
                        <%= f.password_field :password_confirmation, class: 'multisteps-form__input form-control', placeholder:'Confirme contraseña',autocomplete: "new-password" %>
                      </div>
                    </div>
                    <div class="button-row d-flex mt-4">
                      <button class="btn btn-primary ml-auto js-btn-next" type="button" title="Next">Next</button>
                    </div>
                  </div>
                </div>
                <div class="multisteps-form__panel shadow p-4 rounded bg-white" data-animation="scaleIn">
                  <h3 class="multisteps-form__title">Escoge tu lenguaje de programación</h3>
                  <div class="multisteps-form__content">
                    <div class="form-row mt-4">
                      <div class="col">
                        <%= f.select :framework, options_for_select([['Java','Java'],['C#','C#'],['C++','C++']], :selected => params[:framework]), {}, { :class => 'pick-animation__select form-control' } %>
                      </div>
                    </div>
                    <div class="button-row d-flex mt-4">
                      <button class="btn btn-primary js-btn-prev" type="button" title="Prev">Prev</button>
                      <%= f.submit "Sign up",  class: 'btn btn-primary ml-auto js-btn-next' %>
                    </div>
                  </div>
                </div>
              </div>
              <%end%>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
DOMstrings = {
  
  stepsBtnClass: 'multisteps-form__progress-btn',
  stepsBtns: document.querySelectorAll(`.multisteps-form__progress-btn`),
  stepsBar: document.querySelector('.multisteps-form__progress'),
  stepsForm: document.getElementById('new_user'),
  stepsFormTextareas: document.querySelectorAll('.multisteps-form__textarea'),
  stepFormPanelClass: 'multisteps-form__panel',
  stepFormPanels: document.querySelectorAll('.multisteps-form__panel'),
  stepPrevBtnClass: 'js-btn-prev',
  stepNextBtnClass: 'js-btn-next' };
 
 
removeClasses = (elemSet, className) => {
 
  elemSet.forEach(elem => {
 
    elem.classList.remove(className);
 
  });
 
};
 
findParent = (elem, parentClass) => {
 
  let currentNode = elem;
 
  while (!currentNode.classList.contains(parentClass)) {
    currentNode = currentNode.parentNode;
  }
 
  return currentNode;
 
};
 
getActiveStep = elem => {
  return Array.from(DOMstrings.stepsBtns).indexOf(elem);
};
 
setActiveStep = activeStepNum => {
 
  removeClasses(DOMstrings.stepsBtns, 'js-active');
 
  DOMstrings.stepsBtns.forEach((elem, index) => {
 
    if (index <= activeStepNum) {
      elem.classList.add('js-active');
    }
 
  });
};
 
getActivePanel = () => {
 
  let activePanel;
 
  DOMstrings.stepFormPanels.forEach(elem => {
 
    if (elem.classList.contains('js-active')) {
 
      activePanel = elem;
 
    }
 
  });
 
  return activePanel;
 
};
 
setActivePanel = activePanelNum => {
 
  removeClasses(DOMstrings.stepFormPanels, 'js-active');
 
  DOMstrings.stepFormPanels.forEach((elem, index) => {
    if (index === activePanelNum) {
 
      elem.classList.add('js-active');
 
      setFormHeight(elem);
 
    }
  });
 
};
 
formHeight = activePanel => {
 
  const activePanelHeight = activePanel.offsetHeight;
 
  DOMstrings.stepsForm.style.height = `${activePanelHeight}px`;
 
};
 
setFormHeight = () => {
  const activePanel = getActivePanel();
 
  formHeight(activePanel);
};
 
DOMstrings.stepsBar.addEventListener('click', e => {
 
  const eventTarget = e.target;
 
  if (!eventTarget.classList.contains(`${DOMstrings.stepsBtnClass}`)) {
    return;
  }
 
  const activeStep = getActiveStep(eventTarget);
 
  setActiveStep(activeStep);
 
  setActivePanel(activeStep);
});
 
DOMstrings.stepsForm.addEventListener('click', e => {
 
  const eventTarget = e.target;
 
  if (!(eventTarget.classList.contains(`${DOMstrings.stepPrevBtnClass}`) || eventTarget.classList.contains(`${DOMstrings.stepNextBtnClass}`)))
  {
    return;
  }
 
  const activePanel = findParent(eventTarget, `${DOMstrings.stepFormPanelClass}`);
 
  let activePanelNum = Array.from(DOMstrings.stepFormPanels).indexOf(activePanel);
 
  if (eventTarget.classList.contains(`${DOMstrings.stepPrevBtnClass}`)) {
    activePanelNum--;
 
  } else {
 
    activePanelNum++;
 
  }
 
  setActiveStep(activePanelNum);
  setActivePanel(activePanelNum);
 
});
 
window.addEventListener('load', setFormHeight, false);
 
window.addEventListener('resize', setFormHeight, false);
 
 
setAnimationType = newType => {
  DOMstrings.stepFormPanels.forEach(elem => {
    elem.dataset.animation = newType;
  });
};
 
//changing animation
animationSelect = document.querySelector('.pick-animation__select');
 
animationSelect.addEventListener('change', () => {
  const newAnimationType = animationSelect.value;
 
  setAnimationType(newAnimationType);
});

</script>


